import { test, expect } from '@playwright/test';

test.describe('FileFlowMaster Final Verification', () => {
  test('complete app verification', async ({ page }) => {
    console.log('üöÄ Final verification c·ªßa FileFlowMaster...');
    
    // Test 1: Server connection
    console.log('1Ô∏è‚É£ Ki·ªÉm tra server connection...');
    await page.goto('/');
    await page.waitForLoadState('networkidle');
    expect(page.url()).toBe('http://localhost:3001/');
    console.log('‚úÖ Server running tr√™n localhost:3001');
    
    // Test 2: Page loads without errors
    console.log('2Ô∏è‚É£ Ki·ªÉm tra page loading...');
    const content = await page.content();
    expect(content).not.toContain('Safari Can\'t Connect');
    expect(content).not.toContain('ERR_CONNECTION_REFUSED');
    expect(content.length).toBeGreaterThan(100);
    console.log('‚úÖ Page load th√†nh c√¥ng');
    
    // Test 3: Basic API connectivity
    console.log('3Ô∏è‚É£ Ki·ªÉm tra API connectivity...');
    const response = await page.request.get('/api/files');
    // API tr·∫£ v·ªÅ 401 Unauthorized l√† OK (c·∫ßn auth)
    expect([200, 401]).toContain(response.status());
    console.log('‚úÖ API endpoints accessible');
    
    // Test 4: HTML structure
    console.log('4Ô∏è‚É£ Ki·ªÉm tra HTML structure...');
    const htmlElements = await page.locator('html, body, head').count();
    expect(htmlElements).toBeGreaterThanOrEqual(3);
    console.log('‚úÖ HTML structure h·ª£p l·ªá');
    
    // Test 5: Check for React/JS loading
    console.log('5Ô∏è‚É£ Ki·ªÉm tra React app...');
    // Wait a bit for React to initialize
    await page.waitForTimeout(1000);
    
    const hasContent = await page.locator('body *').count();
    expect(hasContent).toBeGreaterThan(0);
    console.log('‚úÖ Frontend app loaded');
    
    console.log('\nüéâ FileFlowMaster verification HO√ÄN TH√ÄNH!');
    console.log('‚úÖ T·∫•t c·∫£ tests ƒë·ªÅu PASS');
    console.log('üöÄ ·ª®ng d·ª•ng s·∫µn s√†ng s·ª≠ d·ª•ng!');
  });
});